@import "typography.css";

:root {
	--primary: #9852c6;
	--primary-dim: #1a1a1a;
	--secondary: #4a86e8;
	--tertiary: #f7c6f3;
	--background: #121212;
	--text: #e0e0e0;
	--link: #858585;
	--link-hover: #cccccc;
	--link-visited: #999999;
	--success: #3a9b3f;
	--warning: #fca34a;
	--error: #f8352a;
	--disabled: #4d4d4d;
	--light-gray: #b8b8b8;
	--dark-gray: #272727;
}

:root {
	color: var(--text);
}

input {
	color: var(--text);
	background-color: var(--dark-gray);
	&::placeholder {
		color: var(--link);
	}
}

body {
	background-color: var(--background);
	color: var(--text);
	margin: 0;
}

a {
	color: var(--link-color);
	transition: color 150ms ease;
	&:hover {
		color: var(--link-hover);
	}
}

button,
.btn {
	outline: none;
	border: none;
	cursor: pointer;
	transition: background-color 150ms ease;
	padding: 0.5rem 1rem;
	border-radius: 0.35rem;
}

/* Green button */
.btn-green {
	background-color: var(--success) !important;
	color: var(--text);
	border: none;
	padding: 10px 20px;
	border-radius: 5px;
	cursor: pointer;
}

/* Primary button */
.btn-primary {
	background-color: var(--primary) !important;
	color: var(--text);
	border: none;
	padding: 10px 20px;
	border-radius: 5px;
	cursor: pointer;
}

/* Disabled button */
.btn-disabled {
	background-color: var(--disabled) !important;
	color: var(--text);
	border: none;
	padding: 10px 20px;
	border-radius: 5px;
	cursor: not-allowed;
}

/* Primary link */
a.link-primary {
	color: var(--primary);
	text-decoration: none;
}

/* Normal link */
a.link-normal {
	color: var(--link);
	text-decoration: none;
	&:hover {
		color: var(--link-hover);
	}
	&:visited {
		color: var(--link-visited);
	}
}

/* Small text */
small,
.text-small {
	color: var(--text);
	font-size: 0.8rem;
}

/* Muted text */
.text-muted {
	color: var(--link);
}

/* Container */
// Set container max-width values
$container-max-widths: (
	640px: 96%,
	768px: 640px,
	1024px: 768px,
	1280px: 1024px,
	1536px: 1280px,
	1848px: 1536px,
);

@media (max-width: 639px) {
	.cosmic-container, .cosmic-container-p {
		max-width: 96%;
	}
}

// Loop through breakpoints to generate media queries
@each $breakpoint, $max-width in $container-max-widths {
	@media (min-width: $breakpoint) {
		.cosmic-container, .cosmic-container-p {
			max-width: $max-width;
		}
	}
}

// Set padding for smallest screen size
.cosmic-container-p {
	padding: 1.5rem 0;
	margin: 0 auto;
}

.full-w-container {
	max-width: 1848px;
	width: 96%;
	margin: 0 auto;
}

@media (min-width: 640px) {
	.cosmic-container-p {
		padding: 2rem 0;
	}
}
@media (min-width: 768px) {
	.cosmic-container-p {
		padding: 3rem 0;
	}
}
@media (min-width: 1024px) {
	.cosmic-container-p {
		padding: 4rem 0;
	}
}
